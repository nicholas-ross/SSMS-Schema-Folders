<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PropertyCategorySchemaFolderOptionsActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="PropertyCategorySchemaFolderOptionsFolderDisplayOptions" xml:space="preserve">
    <value>Folder Display Options</value>
  </data>
  <data name="PropertyCategorySchemaFolderOptionsFolderLevel1" xml:space="preserve">
    <value>Folder Level 1</value>
  </data>
  <data name="PropertyCategorySchemaFolderOptionsFolderLevel2" xml:space="preserve">
    <value>Folder Level 2</value>
  </data>
  <data name="PropertyCategorySchemaFolderOptionsObjectDisplayOptions" xml:space="preserve">
    <value>Object Display Options</value>
  </data>
  <data name="PropertyCategorySchemaFolderOptionsPerformance" xml:space="preserve">
    <value>Performance</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsAppendDot" xml:space="preserve">
    <value>Add a dot after the schema name on the folder label.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsCloneParentNode" xml:space="preserve">
    <value>Add the right click and connection properties of the parent node to the schema folder node.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsEnabled" xml:space="preserve">
    <value>Group sql objects in Object Explorer (tables, views, etc.) into schema folders.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsEnabledModifierKeys" xml:space="preserve">
    <value>Hold the modifier keys down to do the opposite of the Enabled setting. The letter key (or None) in the setting is not used but is required by the settings editor. To change a folder that has already been opened, right-click the folder and select refresh while holding the keys.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsLevel1FolderType" xml:space="preserve">
    <value>The type of sorting to use to create the folders.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsLevel1MinNodeCount" xml:space="preserve">
    <value>Sort nodes into folders only when it contains at least this many nodes.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsLevel1Regex" xml:space="preserve">
    <value>The regex pattern to use for grouping. Only used if Folder Type is Regex. For example (?:^(?:tbl_|AAA_sp_|sp_)([^_]+)_[^_].*|^(?!tbl_|AAA_sp_|sp_)([^_]+)_[^_]+_.*)</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsLevel1GroupNonMatchingAsOther" xml:space="preserve">
    <value>Group items that do not match the regex into a folder named 'Other'. Only used if Folder Type is Regex.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsLevel2FolderType" xml:space="preserve">
    <value>The type of sorting to use to create the folders.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsLevel2MinNodeCount" xml:space="preserve">
    <value>Sort nodes into folders only when it contains at least this many nodes.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsLevel2Regex" xml:space="preserve">
    <value>The regex pattern to use for grouping. Only used if Folder Type is Regex. For example (?:^(?:tbl_|AAA_sp_|sp_)([^_]+)_[^_].*|^(?!tbl_|AAA_sp_|sp_)([^_]+)_[^_]+_.*)</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsLevel2GroupNonMatchingAsOther" xml:space="preserve">
    <value>Group items that do not match the regex into a folder named 'Other'. Only used if Folder Type is Regex.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsQuickSchema" xml:space="preserve">
    <value>Min node count required before using faster but inaccurate method to get schema. Zero = disabled.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsRenameNode" xml:space="preserve">
    <value>Remove the schema name from the object node.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsUnresponsiveTimeout" xml:space="preserve">
    <value>Milliseconds. Increasing will update faster but be more unresponsive.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsUseClear" xml:space="preserve">
    <value>Min node count required before using faster method but will be unresponsive while updating. Zero = disabled.</value>
  </data>
  <data name="PropertyDescriptionSchemaFolderOptionsUseObjectIcon" xml:space="preserve">
    <value>Use the icon of the last child node as the folder icon. If false then use the parent node (i.e. folder) icon.</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsAppendDot" xml:space="preserve">
    <value>Append Dot</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsCloneParentNode" xml:space="preserve">
    <value>Clone Parent Node</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsEnabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsEnabledModifierKeys" xml:space="preserve">
    <value>Modifier Keys</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsLevel1FolderType" xml:space="preserve">
    <value>Folder Type</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsLevel1MinNodeCount" xml:space="preserve">
    <value>Minimum Node Count</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsLevel1Regex" xml:space="preserve">
    <value>Regex Pattern</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsLevel1GroupNonMatchingAsOther" xml:space="preserve">
    <value>Group Non-Matching as 'Other'</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsLevel2FolderType" xml:space="preserve">
    <value>Folder Type</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsLevel2MinNodeCount" xml:space="preserve">
    <value>Minimum Node Count</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsLevel2Regex" xml:space="preserve">
    <value>Regex Pattern</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsLevel2GroupNonMatchingAsOther" xml:space="preserve">
    <value>Group Non-Matching as 'Other'</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsQuickSchema" xml:space="preserve">
    <value>Quick schema from node text</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsRenameNode" xml:space="preserve">
    <value>Remove Schema Name From Node</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsUnresponsiveTimeout" xml:space="preserve">
    <value>Unresponsive timeout</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsUseClear" xml:space="preserve">
    <value>Use Nodes.Clear</value>
  </data>
  <data name="PropertyDisplayNameSchemaFolderOptionsUseObjectIcon" xml:space="preserve">
    <value>Use Object Icon</value>
  </data>
</root>